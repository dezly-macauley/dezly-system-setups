{ pkgs, ... }:

#==============================================================================

                        # SECTION: Package Manager Settings
    
    # SUB_SECTION: Unstable Channel

    # let

        # NOTE: This line will allow you to install programs that fall into 
        # these two categories:
        # 1. Free software from the NixOS unstable channel
        # 2. Unfree software from the NixOS unstable channel
        
        # unstable = import <unstable> { config.allowUnfree = true; };


    # in

#______________________________________________________________________________

{

#______________________________________________________________________________

    # SUB_SECTION: Enable Unfree Software

    # Allow Unfree Packages from NixOS's stable channel
    nixpkgs.config.allowUnfree = true;

#______________________________________________________________________________

    # SUB_SECTION: Enable Binary Caches

    # Nix builds packages from source by default. 
    # This can be time-consuming, especially for larger 
    # packages or when building a lot of packages.
    # By using binary caches, you can retrieve pre-built 
    # binaries instead of compiling them from scratch.

    nix.settings.substituters = [
      "https://cache.nixos.org/"
    ];

#______________________________________________________________________________

                            # SECTION: Enable Dynamically Linked Executables

    programs.nix-ld.enable = true;
    programs.nix-ld.package = pkgs.nix-ld;

    programs.nix-ld.libraries = with pkgs; [
        glibc
    ];

#______________________________________________________________________________

                            # SECTION: Enable Nix Flakes 
                    # (Custom Development Environments)

    nix.settings.experimental-features = [ 
        "nix-command" 
        "flakes"
    ];

#______________________________________________________________________________

                            # SECTION: Boot Settings

    boot.loader.systemd-boot.enable = true;
    boot.loader.efi.canTouchEfiVariables = true;

#______________________________________________________________________________

                            # SECTION: Internet Settings

    networking.hostName = "nixos";

    # Enable networking using a program called network manager
    networking.networkmanager.enable = true;

#______________________________________________________________________________

                            # SECTION: Default Applications

    xdg.mime.enable = true;
    xdg.mime.defaultApplications = {
        "x-scheme-handler/http" = [ "firefox.desktop" ];
        "x-scheme-handler/https" = [ "firefox.desktop" ];
        "text/html" = [ "firefox.desktop" ];
        "application/pdf" = [ "firefox.desktop" ];
    };

#______________________________________________________________________________

                        # SECTION: Shell Settings

    programs.zsh = {
        enable = true;
	    autosuggestions.enable = true;
	    syntaxHighlighting.enable = true;
    };


    programs.bash.completion.enable = true;

    users.defaultUserShell = pkgs.bash;

    # Define a user account. 
    # Don't forget to set a password with the command ‘passwd username’
    users.users.dezly-macauley = {
        isNormalUser = true;
        description = "Dezly Macauley";
        extraGroups = [ "networkmanager" "wheel" ];

        # Sets zsh as my default shell

        shell = pkgs.zsh;
    };

#______________________________________________________________________________

                            # SECTION: Additional Configurations  

    imports = [

        # SUB_SECTION: Auto-generated by NixOS
        ./hardware-configuration.nix

        # SUB_SECTION: Core Settings
        ./core-settings/power_optimisation.nix
        ./core-settings/time_zone_and_locale.nix
        ./core-settings/code_editor_setups.nix
        ./core-settings/virtual_machine_emulation.nix

        # SUB_SECTION: Database Languages
        # ./database-systems/postgresql.nix
        ./database-systems/mysql.nix

        # SUB_SECTION: Programming Languages
        ./programming-languages/rust.nix
        ./programming-languages/go.nix
        ./programming-languages/python.nix
        ./programming-languages/php.nix
        ./programming-languages/javascript.nix
            
    ];

#______________________________________________________________________________



    # SECTION: Docker

    virtualisation.docker.enable = true;
    users.extraGroups.docker.members = [ "dezly-macauley" ];

#______________________________________________________________________________

    # SECTION: Desktop Environment

    # User Interface
    programs.hyprland.enable = true;

    # Recycle bin on Thunar won't work without this
    services.gvfs.enable = true;


#==============================================================================

    # SECTION: Installed Programs (System Wide)

    environment.systemPackages = with pkgs; [
#_____________________________________________________________________________
        # SUB_SECTION: Web Browsers

        mullvad-browser
        firefox

#_____________________________________________________________________________

        # SUB_SECTION: SQLite

        #SQLite is a widely-used, fast, 
        # and self-contained SQL database engine, 
        # implemented in C, 
        # that powers countless applications on mobile devices, 
        # computers, and embedded systems globally.
        sqlite

        # An alternative to the built-in SQL cli
        # litecli has quality of life improvements like syntax highlighting,
        # autocompletion, and command history
        litecli

        vscode-langservers-extracted

        # SECTION: Document Creation

        libreoffice # A collection of document creation programs
        # wkhtmltopdf # Converts html files to pdf

        # SECTION: Development Environment Tools

        # Syntax Highlighting
        vimPlugins.nvim-treesitter-parsers.php_only

        # Nginx is a reverse proxy and lightweight webserver
        # It is one of the world's most popular web servers
        nginx

        # Apache is one of the world's most popular web servers
        apacheHttpd
#______________________________________________________________________________

        # SECTION: C Programming
        
        clang-tools
        # Contains `clangd` 
        # Language support and error messages for C in Neovim
#______________________________________________________________________________

        # File Manager
        xfce.thunar-volman
        xfce.exo
        gvfs

        # setting keyboard layouts
		xorg.setxkbmap

		# clipboard
		wl-clipboard
		cliphist
		wl-clip-persist

		# audio management
		pipewire
		pwvucontrol
		wireplumber

		# Desktop Notifications
		dunst

		# Authentication Agent
		lxqt.lxqt-policykit

		# External Hardrives
		udiskie

		# Deskop Portals
		xdg-desktop-portal-hyprland
		xdg-desktop-portal-gtk
		xdg-utils # A collection of cli tools for desktop integration tasks

		# Wallpaper
		hyprpaper

		# Qt Libraries (Recommended by Hyprland)
		kdePackages.qt6ct
		libsForQt5.qt5ct

			# For applying themes
			nwg-look	

			# My favorite theme
			# sweet		

		# File Explorer Theme
		# beauty-line-icon-theme

# Language support for Tailwind CSS
tailwindcss-language-server

# Language support for htmx
htmx-lsp

# A standalone-cli for using Tailwind CSS in a project without having to
# use node.js or npm
# https://tailwindcss.com/blog/standalone-cli
tailwindcss

insomnia # Store, organize, and execute REST API requests

cloc                # Counts the lines of source code 
slither-analyzer	# Static Analyzer for Solidity and Vyper

solc                # The Solidity compiler
solc-select		    # Allows you to switch between solidity versions

sqls    # The SQL language server written in Go

		# Application Launcher
		wofi

		# File Explorer
		xfce.thunar
		
		# Image Viewer
		viewnior

		# Image Editor
		gimp

		# Media Player
		vlc	

		# Video Recording and Streaming
		obs-studio

#______________________________________________________________________________
			# Required for screensharing 
			qt6.qtwayland			
			libsForQt5.qt5.qtwayland	

		wf-recorder		# The main recording tool
		ffmpeg			# Dependency of wf-recorder 
		wayland-protocols	# Dependency of wf-recorder

#______________________________________________________________________________

# SEC: Nix

nil # The Nix language server for editing .nix files

#______________________________________________________________________________
 
grim        # Screenshots
slurp       # Screenshots

imagemagick # Converting image formats. Removing screenshot outline

			lua

			# Language Server
			lua-language-server			

			# Package manager
			luajitPackages.luarocks

    ];

  # Audio Management Services

  services.pipewire = {
	enable = true;
	alsa.enable = true;
	alsa.support32Bit = true;
	pulse.enable = true;
	wireplumber.enable = true;

  };

    system.stateVersion = "24.11";

}
